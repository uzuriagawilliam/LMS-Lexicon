@model IEnumerable<IndexStudentsViewModel>
@inject ICourseSelectService courseSelect




@{
    ViewData["Title"] = "Index";
    var StudentExists = TempData["StudentExists"];
    var StudentSuccess = TempData["StudentSuccess"];
}

<h1>Studenter</h1>
<br />
<br />
<p>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#studentModal">Lägg till Student</button>
</p>
@if (StudentExists != null)
{
    <div class="alert alert-danger" id="AlertDanger" role="alert">
        @StudentExists
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (StudentSuccess != null)
{
    <div class="alert alert-success" id="AlertSuccess" role="alert">
        @StudentSuccess
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}


<div class="alert alert-danger alert-dismissible fade hide" id="AlertDanger" role="alert">
    @TempData["StudentExists"]
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div id="Modal">
    <partial name="_Modal" />
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CourseName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CourseName)
                </td>
                <td>
                    <a asp-action="EditStudent" asp-route-id="@item.Id">Ändra</a> |
                    <a asp-action="DetailsStudent" asp-route-id="@item.Id">Detaljer</a> |
                    <a asp-action="DeleteStudent" asp-route-id="@item.Id">Ta bort</a>
                </td>
            </tr>
        }


    </tbody>
</table>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
   @if(@TempData["StudentSuccess"] != null)
    {
    @: $('.alert').removeClass('hide');
    @: $('.alert').addClass('show');
    }
   @if(@TempData["StudentExists"] != null)
    {
    @: $('.alert').removeClass('hide');
    @: $('.alert').addClass('show');
    }
</script>
@section Scripts{
    <script src="~/js/user.js" asp-append-version="true"></script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
            (function ($) {

                $.fn.updateValidation = function () {
                    var $this = $("CreateStudent");
                    var form = $this.closest("form")
                        .removeData("validator")
                        .removeData("unobtrusiveValidation");

                    $.validator.unobtrusive.parse(form);

                    return $this;
                };
        })(jQuery)




            @if(@TempData["StudentExists"] != null)
            {
                @: $('.alert').removeClass('hide');
                @: $('.alert').addClass('show');
            }
    </script>
}



}

