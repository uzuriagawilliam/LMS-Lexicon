@model IndexViewModel
@inject ICourseSelectService courseSelect

@{
    ViewData["Title"] = "Index";
    var StudentExists = TempData["StudentExists"];
    var StudentSuccess = TempData["StudentSuccess"];
}
<div id="addStudent"></div>

<h1>Studenter</h1>
<br />
<p>
    <a asp-action="CreateStudent" class="btn btn-success text-white popup" data-ajax="true" data-ajax-method="GET" data-ajax-success="Ok" data-ajax-update="#addStudent" data-ajax-mode="replace"> Lägg till student <i class="fa fa-plus"></i></a>
</p>

<div id="UsersList">
    @if (StudentSuccess != null)
    {
        <div class="alert alert-success alert-dismissible fade hide" id="AlertDanger" role="alert">
            @TempData["StudentSuccess"].ToString()

            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    @if (StudentExists != null)
    {
        <div class="alert alert-danger alert-dismissible fade hide" id="AlertDanger" role="alert">
            @TempData["StudentExists"].ToString()

            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    <partial name="UsersPartial" model="@Model.UserList" />
</div>
@section Scripts {
    <script src="~/js/site.js"></script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


