@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item py-md-5">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Student", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark float-right">Logga ut</button>
            </form>
        </li>
        <li class="nav-item py-md-5">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@User.Identity.Name</a>
        </li>

    }
    else
    {
        <li class="nav-item py-md-2">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Registrera</a>
        </li>
        <li class="nav-item py-md-2">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Logga in</a>
        </li>
    }

    @{
        var currentrole = User.IsInRole("Student") ? "Student" : User.IsInRole("Teacher") ? "Teacher" : "";
        <li class="nav-item py-md-5 font-weight-bold py-md-4">
            @currentrole
        </li>
    }
</ul>
